# general deployment configuration
# environment.name has to be set in extending configurations
.deployment:
  stage: deployment
  needs: [ "audit_frontend" ]
  before_script:
    - # disable gitlab warning for docker login
      echo "${CI_REGISTRY_PASSWORD}" | docker login --username "${CI_REGISTRY_USER}" --password-stdin ${CI_REGISTRY}
  environment:
    url: https://${CI_ENVIRONMENT_NAME}-vacuum.westeurope.cloudapp.azure.com

# scheduled deployment for nightly dev2
deploy-dev:
  extends: .deployment
  script:
    - docker pull ${DOCKER_IMAGE_NAME}:${$CI_COMMIT_REF_SLUG}
    - #docker-compose down
      echo "hier soll der service geupdatd werden"
    - # docker-compose up -d --no-deps --build ${CI_ENVIRONMENT_NAME}
      echo "2. Schritt?"
    - echo "URL ${CI_ENVIRONMENT_URL}"
  environment:
    name: dev2
  only:
    refs:
      - develop
  tags:
    - pvac-frontend-dev-deployment

# manual deployment for dev2
deploy-dev-manually:
  extends: .deployment
  script:
    - docker pull ${DOCKER_IMAGE_NAME}:${CI_COMMIT_TAG}
    - #docker-compose down
      echo "hier soll der service geupdatd werden"
    - # docker-compose up -d --no-deps --build ${CI_ENVIRONMENT_NAME}
      echo "2. Schritt?"
    - echo "URL ${CI_ENVIRONMENT_URL}"
  environment:
    name: dev2
  when: manual
  tags:
    - docker

# scheduled deployment for nightly lsg
deploy-lsg:
  extends: .deployment
  needs: [ "build-docker-image-lsg" ]
  script:
    - docker pull ${DOCKER_IMAGE_NAME}:lsg-${$CI_COMMIT_REF_SLUG}
    - #docker-compose down
      echo "hier soll der service geupdatd werden"
    - # docker-compose up -d --no-deps --build ${CI_ENVIRONMENT_NAME}
      echo "2. Schritt?"
    - echo "URL ${CI_ENVIRONMENT_URL}"
  environment:
    name: dev2
  only:
    refs:
      - develop
  tags:
    - pvac-frontend-dev-deployment

# manual deployment for lsg
deploy-lsg-manually:
  extends: .deployment
  needs: [ "build-docker-image-lsg" ]
  script:
    - docker pull ${DOCKER_IMAGE_NAME}:lsg-${CI_COMMIT_TAG}
    - #docker-compose down
      echo "hier soll der service geupdatd werden"
    - # docker-compose up -d --no-deps --build ${CI_ENVIRONMENT_NAME}
      echo "2. Schritt?"
    - echo "URL ${CI_ENVIRONMENT_URL}"
  environment:
    name: dev2
  when: manual
  tags:
    - pvac-frontend-dev-deployment

deploy-uat:
  extends: .deployment
  script:
    - docker service update --with-registry-auth --image ${DOCKER_IMAGE_NAME}:main ${DOCKER_SERVICE_NAME}
  environment:
    name: uat
  when: manual
  allow_failure: false
  only:
    refs:
      - main
  tags:
    - pvac-frontend-uat-deployment

deploy-uat-manually:
  extends: .deployment
  script:
    - docker service update --with-registry-auth --image ${DOCKER_IMAGE_NAME}:${CI_COMMIT_TAG} ${DOCKER_SERVICE_NAME}
  environment:
    name: uat
  when: manual
  allow_failure: false
  only:
    - tags
  tags:
    - pvac-frontend-uat-deployment

deploy-prd-manually:
  extends: .deployment
  script:
    - docker service update --with-registry-auth --image ${DOCKER_IMAGE_NAME}:${CI_COMMIT_TAG} ${DOCKER_SERVICE_NAME}
  environment:
    name: prd
  when: manual
  allow_failure: false
  only:
    - tags
  tags:
    - pvac-frontend-uat-deployment
