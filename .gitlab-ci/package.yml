.build-docker-image:
  image: docker:git
  stage: package
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_IMAGE_TAG: ${CI_COMMIT_REF_SLUG}
  services:
    - docker:dind
  cache: []
  before_script:
    - # disable gitlab warning for docker login
      echo "${CI_REGISTRY_PASSWORD}" | docker login --username "${CI_REGISTRY_USER}" --password-stdin ${CI_REGISTRY}
  script:
    - docker build
      -t ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}
      --build-arg CI=${CI}
      --build-arg PORT=${PORT}
      --build-arg NODE_ENV=${NODE_ENV}
      --build-arg BASE_URL="${BASE_URL}"
      --build-arg CONSOLA_LEVEL=${CONSOLA_LEVEL}
      --build-arg STORYBLOK_SPACE_ID=${STORYBLOK_SPACE_ID}
      --build-arg STORYBLOK_OAUTH_TOKEN="${STORYBLOK_OAUTH_TOKEN}"
      --build-arg STORYBLOK_ACCESS_TOKEN="${STORYBLOK_ACCESS_TOKEN}"
      --build-arg STORYBLOK_VERSION="${STORYBLOK_VERSION}"
      --build-arg STORYBLOK_RESOLVE_RELATIONS="${STORYBLOK_RESOLVE_RELATIONS}"
      --build-arg STORYBLOK_RESOLVE_LINKS="${STORYBLOK_RESOLVE_LINKS}"
      --build-arg STORYBLOK_RESOLVE_ASSETS="${STORYBLOK_RESOLVE_ASSETS}"
      --build-arg STORYBLOK_CONTENT_TYPES="${STORYBLOK_CONTENT_TYPES}"
      --build-arg STORYBLOK_EXCLUDE_ROUTES="${STORYBLOK_EXCLUDE_ROUTES}"
      --build-arg DEFAULT_LANGUAGE_CODE="${DEFAULT_LANGUAGE_CODE}"
      --build-arg LANGUAGE_CODES="${LANGUAGE_CODES}"
      --build-arg CI_COMMIT_SHORT_SHA="${CI_COMMIT_SHORT_SHA}"
      --build-arg CI_COMMIT_REF_NAME="${CI_COMMIT_REF_NAME}"
      --build-arg CI_PROJECT_URL="${CI_PROJECT_URL}"
      --build-arg REGION_CODES="${REGION_CODES}"
      --build-arg DEFAULT_REGION_CODE="${DEFAULT_REGION_CODE}"
      --build-arg SHOP_BASE_URL="${SHOP_BASE_URL}"
      --build-arg SHOP_IMAGE_URL="${SHOP_IMAGE_URL}"
      --build-arg CONSOLA_LEVEL="${CONSOLA_LEVEL}"
      --build-arg CURRENT_REGION_CODE="${CURRENT_REGION_CODE}"
      --build-arg USERCENTRICS_PRIVACY_PATH="${USERCENTRICS_PRIVACY_PATH}"
      --build-arg USERCENTRICS_ID="${USERCENTRICS_ID}"
      --build-arg KEYCLOAK_BASE_URL="${KEYCLOAK_BASE_URL}"
      --build-arg KEYCLOAK_REALM_NAME="${KEYCLOAK_REALM_NAME}"
      --build-arg KEYCLOAK_CLIENT_ID="${KEYCLOAK_CLIENT_ID}"
      --build-arg GOOGLE_TAG_MANAGER_ID="${GOOGLE_TAG_MANAGER_ID}"
      --build-arg EMPOLIS_TIMEOUT="${EMPOLIS_TIMEOUT}"
      --build-arg EMPOLIS_STAGE="${EMPOLIS_STAGE}"
      --build-arg EMPOLIS_PATH="${EMPOLIS_PATH}"
      --build-arg EMPOLIS_GUEST_TOKEN_URL="${EMPOLIS_GUEST_TOKEN_URL}"
      --build-arg EMPOLIS_SSO_PATH="${EMPOLIS_SSO_PATH}"
      --build-arg EMPOLIS_AUTH_URL="${EMPOLIS_AUTH_URL}"
      --build-arg EMPOLIS_USERNAME_CUSTOMER="${EMPOLIS_USERNAME_CUSTOMER}"
      --build-arg EMPOLIS_PASSWORD_CUSTOMER="${EMPOLIS_PASSWORD_CUSTOMER}"
      --build-arg EMPOLIS_USERNAME_INTERNAL_LEVEL_0="${EMPOLIS_USERNAME_INTERNAL_LEVEL_0}"
      --build-arg EMPOLIS_PASSWORD_INTERNAL_LEVEL_0="${EMPOLIS_PASSWORD_INTERNAL_LEVEL_0}"
      --build-arg EMPOLIS_USERNAME_INTERNAL_LEVEL_1="${EMPOLIS_USERNAME_INTERNAL_LEVEL_1}"
      --build-arg EMPOLIS_PASSWORD_INTERNAL_LEVEL_1="${EMPOLIS_PASSWORD_INTERNAL_LEVEL_1}"
      --build-arg EMPOLIS_USERNAME_INTERNAL_LEVEL_2="${EMPOLIS_USERNAME_INTERNAL_LEVEL_2}"
      --build-arg EMPOLIS_PASSWORD_INTERNAL_LEVEL_2="${EMPOLIS_PASSWORD_INTERNAL_LEVEL_2}"
      --build-arg EMPOLIS_CLIENT_ID="${EMPOLIS_CLIENT_ID}"
      --build-arg EMPOLIS_CLIENT_SECRET="${EMPOLIS_CLIENT_SECRET}"
      --build-arg DISABLE_SECURITY_POLICY_FORM_ACTION_SELF="${DISABLE_SECURITY_POLICY_FORM_ACTION_SELF}"
      --build-arg VACUUM_CALCULATOR_BASE_URL="${VACUUM_CALCULATOR_BASE_URL}"
      -f docker/Dockerfile .
  after_script:
    - # here we will push ALL created tags of an image
      docker push --all-tags ${DOCKER_IMAGE_NAME}
  tags:
    - dind_runner

build-frontend-docker-image-for-branch:
  extends: .build-docker-image
  needs: ["test", "lint"]
  environment:
    name: dev2
  except:
    - develop
    - main
    - tags

.build-docker-image-lsg:
  extends: .build-docker-image
  image: docker:git
  cache:
    - key: "${CI_PIPELINE_ID}-build-lsg"
      paths:
        - lsg-public/
      policy: pull
  script:
    - docker build -t ${DOCKER_IMAGE_NAME}:lsg-${CI_COMMIT_REF_SLUG} -f docker/DockerfileLSG .

build-lsg-docker-image-for-branch:
  extends: .build-docker-image-lsg
  needs: ["test", "lint"]
  except:
    - develop
    - main
    - tags

build-frontend-docker-image-for-develop:
  extends: .build-docker-image
  needs: ["sonar-qube"]
  environment:
    name: dev2
  only:
    - develop

build-lsg-docker-image-for-develop:
  extends: .build-docker-image-lsg
  needs: ["sonar-qube"]
  only:
    - develop

build-frontend-uat-docker-image-for-main-and-tags:
  extends: .build-docker-image
  needs: ["test", "lint"]
  variables:
    DOCKER_IMAGE_TAG: uat-${CI_COMMIT_REF_SLUG}
  environment:
    name: uat2
  only:
    - main
    - tags

build-frontend-prd-docker-image-for-tags:
  extends: .build-docker-image
  needs: ["test", "lint"]
  variables:
    DOCKER_IMAGE_TAG: prd-${CI_COMMIT_REF_SLUG}
  environment:
    name: prd
  only:
    - tags

tag-gitlab-nightly:
  needs: ["build-frontend-docker-image-for-develop"]
  image: docker:git
  stage: package
  before_script:
    - git remote remove origin
    - git remote add origin https://"${CI_GITLAB_TAG_WRITE_TOKEN_USERNAME}:${CI_GITLAB_TAG_WRITE_TOKEN_PASSWORD}"@gitlab.diva-e.com/pvac/pvweb.git
  script:
    - git tag  "$(date +'%Y%m%d.%H%M')"
    - git push origin "$(date +'%Y%m%d.%H%M')"
  only:
    - schedules
  tags:
    - docker_runner
