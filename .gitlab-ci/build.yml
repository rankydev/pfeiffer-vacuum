.node-image:
  image: node:16-alpine
  tags:
    - docker_runner

build:
  extends: .node-image
  stage: build
  script:
    - npm ci --cache .npm --prefer-offline
    - npm run build
    - npm run lsg:build
  artifacts:
    when: on_failure
    paths:
      - .npm/_logs
    expire_in: 3 week

lint:
  extends: .node-image
  stage: test
  needs: [ "build" ]
  script:
    - npm run lint:ci
  artifacts:
    when: always
    paths:
      - report/
    expire_in: 3 week

test:
  extends: .node-image
  stage: test
  needs: [ "lint" ]
  script:
    - npm test
  artifacts:
    when: always
    reports:
      junit: coverage/clover.xml
    paths:
      - coverage/
    expire_in: 3 week

sonar-qube:
  image: sonarsource/sonar-scanner-cli
  stage: analysis
  needs: [ "test", "lint" ]
  script:
    - sonar-scanner -Dsonar.login=${SONARQUBE_ACCESS_TOKEN}
  tags:
    - docker_runner
  only:
    - develop

.build-docker-image:
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  image: docker:git
  stage: build-docker-image
  services:
    - docker:dind
  before_script:
    - # disable gitlab warning for docker login
      echo "${CI_REGISTRY_PASSWORD}" | docker login --username "${CI_REGISTRY_USER}" --password-stdin ${CI_REGISTRY}
  after_script:
    - # here we will push ALL created tags of an image
      docker push --all-tags ${DOCKER_IMAGE_NAME}
  tags:
    - dind_runner

build-docker-image-frontend:
  extends: .build-docker-image
  needs: [ "test", "lint" ]
  script:
    - docker build -t ${DOCKER_IMAGE_NAME}:${CI_COMMIT_REF_SLUG} -f docker/Dockerfile .
  except:
    - develop

build-docker-image-lsg:
  extends: .build-docker-image
  needs: [ "test", "lint" ]
  script:
    - docker build -t ${DOCKER_IMAGE_NAME}:lsg-${CI_COMMIT_REF_SLUG} -f docker/DockerfileLSG .
  except:
    - develop

build-docker-image-frontend-develop:
  extends: .build-docker-image
  needs: [ "sonar-qube" ]
  script:
    - docker build -t ${DOCKER_IMAGE_NAME}:${CI_COMMIT_REF_SLUG} -f docker/Dockerfile .
  only:
    - develop

build-docker-image-lsg-develop:
  extends: .build-docker-image
  needs: [ "sonar-qube" ]
  script:
    - docker build -t ${DOCKER_IMAGE_NAME}:lsg-${CI_COMMIT_REF_SLUG} -f docker/DockerfileLSG .
  only:
    - develop

tag-docker-image-latest-main:
  extends: .build-docker-image
  needs: [ "build-docker-image-frontend" ]
  script:
    - docker pull ${DOCKER_IMAGE_NAME}:main
    - docker tag ${DOCKER_IMAGE_NAME}:main ${DOCKER_IMAGE_NAME}:latest
  only:
    - main
